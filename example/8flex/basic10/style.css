@charset "UTF-8";
*{margin: 0; padding: 0; box-sizing: border-box;}

.container{border: 2px solid #000; background-color: green;}
.container .item{border: 2px solid #000; background-color: yellow;}


.container {
    display: flex;
    height: 50vh;/* 화면의 높이의 반만 차지함 */}

.item {
    height: 100px;

   /* align-self(수직축으로 아이템 정렬) 
        
   // align --> 수직축 정렬 
   // align-items--> 전체 아이템의 수직축 방향 정렬
   // align-self는 align-items의 아이템 버전
   // 해당 아이템의 수직축 방향 정렬 (align-self를 사용하여 flexbox 아이템들을 수직 축을 따라 다양한 방식으로 정렬 가능)
   // 기본값 auto, 기본적으로 align-items 설정 상속 받음(auto외의 나머지 값들은 align-items와 동일)
   // 우선권: align-items < align-self(전체 설정보다 각각의 개별 설정이 우선한다는 것) */

   align-self: flex-start; /* 아이템을 수직 축의 시작 부분(위쪽)에 정렬 */
   align-self: center; /* 아이템을 수직 축의 중앙에 정렬 */
   align-self: flex-end;/* 아이템을 수직 축의 끝 부분(아래쪽)에 정렬 */

   /* 내 자신을 부모의 cross 축으로부터 어느 방향에 놓을지 결정하는 것, 
   주로 세가지(center, flex-start, flex-end)를 많이 사용함 */

   /* align-self: auto; //기본값, 부모 flexbox 컨테이너의 align-items 속성에 따라 아이템 정렬, 
   부모가 정의한 align-items 값이 적용되며, 부모가 정의하지 않은 경우 기본값인 stretch 적용됨 */
   /* align-self: stretch; // 아이템을 수직 축에서 늘려서 컨테이너의 높이에 맞춤. 아이템의 높이가 컨테이너의 높이와 동일 */
   /* align-self: baseline; // 아이템을 부모 flexbox 컨테이너의 baseline에 정렬, 텍스트 기반 요소의 경우 주로 텍스트의 기준선에 맞추는 데 사용 */}